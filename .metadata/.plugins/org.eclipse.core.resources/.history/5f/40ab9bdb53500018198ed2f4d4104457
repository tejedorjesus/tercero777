import java.util.*;
public class Principal {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		TreeMap<Integer,ArrayList<Integer>>MapaNota1=new TreeMap <Integer,ArrayList<Integer>>();
		TreeMap<Integer,ArrayList<Integer>>MapaNota2=new TreeMap <Integer,ArrayList<Integer>>();
		TreeMap<Integer,ArrayList<Integer>>MapaNota3=new TreeMap <Integer,ArrayList<Integer>>();


		String[] nombres = { "Rafa", "Jesus", "Raul", "Diego", "Cristian", "Pepe", "Luis", "Jose Antonio", "Eric",
		"German" };
		String[] apellidos = { "Garcia", "Perez", "Brey", "Losantos", "Cifuentes", "Casado", "Bañez", "Franco",
				"Blanco", "Jimenez" };
		Random rand = new Random();
		Alumno[] unAlumno=null;




		int opcion;
		opcion=Leer.pedirEntero("Elijaa una opcio\n1-generar datos\n2-Mostrar datos\n3-Generar mapa de la Nota1 oreden ascendente"
				+ "\n4-Generar mapa de la Nota2 oreden ascendente\n5-Generar mapa de la Nota3 oreden ascendente");
		while (opcion!=0){

			switch (opcion) {
			case 1:
				unAlumno = new Alumno[50];
				for (int i = 0; i < unAlumno.length; i++) {
					unAlumno[i]=new Alumno (nombres[rand.nextInt(nombres.length)],apellidos[rand.nextInt(apellidos.length)],
							rand.nextInt(100), rand.nextInt(100),rand.nextInt(100));


				}

				break;

			case 2:
				if(unAlumno==null)
					System.out.println("hay que generar los datos primero");
				else{


					for (int i = 0; i < unAlumno.length; i++) {
						System.out.println(unAlumno[i]);

					}}
				break;


		

			case 3:

				int indice;
				Integer NotaMapa;
				ArrayList<Integer> ListaIndicesNombresAlumnos;
				
				for (indice=0; indice < unAlumno.length; indice++) {
					NotaMapa=unAlumno[indice].getNota1();
					if(MapaNota1.containsKey(NotaMapa)==false){
						ListaIndicesNombresAlumnos = new ArrayList<Integer>();
						ListaIndicesNombresAlumnos.add(indice);
						MapaNota1.put(NotaMapa,ListaIndicesNombresAlumnos);
					}
					else{
						MapaNota1.get(NotaMapa).add(indice);			
					}
				}
				
			/*case  2://genererando el mapa
				int indice;
				Integer NotaMapa;
				ArrayList<Integer> listaIndicesAlumnosDelNodo;
				for (indice = 0; indice < unAlumno.length; indice++) {
					NotaMapa=unAlumno[indice].getNota();
					if (MapaNota.containsKey(NotaMapa)==false){
						listaIndicesAlumnosDelNodo= new ArrayList<Integer>();
						listaIndicesAlumnosDelNodo.add(indice);
						MapaNota.put(NotaMapa,listaIndicesAlumnosDelNodo);
					}else{
						MapaNota.get(NotaMapa).add(indice);
					}
				}*/


				Iterator<Integer> itr = MapaNota1.keySet().iterator();
				while(itr.hasNext()){
					NotaMapa=(int)itr.next();
					ListaIndicesNombresAlumnos=MapaNota1.get(NotaMapa);
					System.out.println("--------------------------------------PRIMER TRIMESTRE--------------------------------------");
					Leer.mostrarEnPantalla("\nNota : " + NotaMapa );// se muestra la nota 
					for (Integer posiciones : 	ListaIndicesNombresAlumnos) {
						Leer.mostrarEnPantalla("Posicion del Alumno en el nodo : "+(posiciones+1) + " , ");
						System.out.println(unAlumno[posiciones]);

					}
				}
				break;
				
			default:

				break;




			}//end switch
			opcion=Leer.pedirEntero("Elijaa una opcio\n1-generar datos\n2-Mostrar datos\n3-Generar mapa de la Nota1 oreden ascendente"
					+ "\n4-Generar mapa de la Nota2 oreden ascendente\n5-Generar mapa de la Nota3 oreden ascendente");

		}//end while


















	}

}
